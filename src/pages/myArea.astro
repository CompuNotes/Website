---
// Imports
import MenuBarMyArea from "../components/MenuBarMyArea.astro";
import Footer from "../components/Footer.astro";
import SidebarMyArea from "../components/SidebarMyArea.astro";
import "../styles/global.css";
---

<MenuBarMyArea />
<main class="flex bg-gray-100">
  <SidebarMyArea />
  <div class="container max-w-[1200px] mx-auto p-5">
    <div class="content flex flex-col gap-5">
      <div class="upload-section bg-gray-100 p-5 rounded-lg">
        <div class="upload-columns flex gap-5">
          <div class="column flex-1 flex flex-col gap-2.5">
            <input
              id="upload-title"
              class="rounded-lg p-2 border border-gray-300 w-full"
              type="text"
              placeholder="Insert a name for the document"
            />
            <input
              id="upload-file"
              class="rounded-lg p-2 border border-gray-300 w-full"
              type="file"
            />
            <label for="tag-select" class="text-gray-700">Select tag</label>
            <select
              id="tag-select"
              class="rounded-lg p-2 border border-gray-300 w-full"
              multiple
              size="5"
            >
              <option disabled>Loading tags...</option>
            </select>
          </div>
          <div class="column flex-1 flex flex-col gap-2.5">
            <select class="rounded-lg p-2 border border-gray-300 w-full">
              <option>Select degree</option>
              <option>Computer science</option>
            </select>
            <select class="rounded-lg p-2 border border-gray-300 w-full">
              <option>Select academic year</option>
              <option>First year</option>
              <option>Second year</option>
              <option>Third year</option>
              <option>Fourth year</option>
            </select>
            <select class="rounded-lg p-2 border border-gray-300 w-full">
              <option>Select course</option>
              <option>course 1</option>
              <option>course 2</option>
              <option>course 3</option>
              <option>course 4</option>
              <option>course 5</option>
            </select>
          </div>
        </div>
        <button
          class="save-btn rounded-lg bg-blue-500 hover:bg-blue-600 flex justify-center p-2 text-white border-none cursor-pointer transition-colors duration-300 justify-self-center w-1/2 mt-5"
          onclick="handleUpload()"
        >
          Upload to CompuNotes
        </button>
        <button
          class="logout-btn rounded-lg bg-red-500 hover:bg-red-600 text-white px-4 py-2 mt-5 w-1/2 transition"
          onclick="logout()"
        >
          Logout
        </button>
      </div>

      <div class="documents-section bg-gray-100 p-5 rounded-lg">
        <div class="relative max-w-xl mx-auto searchbar">
          <input
            type="text"
            placeholder="Search for a document name"
            class="w-full p-4 pl-12 rounded-full shadow-md"
          />
          <svg
            class="absolute top-1/2 left-4 transform -translate-y-1/2 h-6 w-6 text-gray-500"
            width="24"
            height="24"
            viewBox="0 0 24 24"
            stroke-width="2"
            stroke="currentColor"
            fill="none"
            stroke-linecap="round"
            stroke-linejoin="round"
          >
            <path stroke="none" d="M0 0h24v24H0z"></path>
            <circle cx="10" cy="10" r="7"></circle>
            <line x1="21" y1="21" x2="15" y2="15"></line>
          </svg>
        </div>
        <h2 class="my-2.5 text-xl text-gray-800">My documents</h2>
        <div id="documents-list" class="mt-4"></div>
      </div>
    </div>
  </div>
</main>
<Footer />

<script type="module">
  function logout() {
    localStorage.removeItem("accessToken");
    localStorage.removeItem("username");
    window.location.href = "/login";
  }

  async function fetchTags() {
    try {
      const res = await fetch("https://django.narurm.eu/compunotesapi/tag/");
      const tags = await res.json();
      const select = document.getElementById("tag-select");
      select.innerHTML = "";

      tags.forEach((tag) => {
        const option = document.createElement("option");
        option.value = tag.name;
        option.textContent = tag.name;
        select.appendChild(option);
      });
    } catch (err) {
      console.error("Failed to load tags:", err);
      const select = document.getElementById("tag-select");
      select.innerHTML = "<option disabled>Error loading tags</option>";
    }
  }

  async function fetchMyFiles() {
    const accessToken = localStorage.getItem("accessToken");
    const container = document.getElementById("documents-list");

    if (!accessToken) {
      logout();
      return;
    }

    container.innerHTML = "<p class='text-gray-500'>Loading your files...</p>";

    try {
      const res = await fetch("https://django.narurm.eu/compunotesapi/file/?ordering=-avg_rating", {
        headers: {
          Authorization: `Bearer ${accessToken}`,
        },
      });

      if (res.status === 401) {
        logout();
        return;
      }

      const files = await res.json();
      const username = localStorage.getItem("username");

      const userFiles = files.filter((file) => file.user === username);

      container.innerHTML = "";
      if (!userFiles.length) {
        container.innerHTML =
          "<p class='text-gray-500'>You haven't uploaded any files yet.</p>";
        return;
      }

      userFiles.forEach((file) => {
        const card = document.createElement("div");
        card.className =
          "bg-gray-50 border border-gray-200 rounded-lg p-4 shadow-sm flex justify-between items-center";

        const left = document.createElement("div");
        left.innerHTML = `
          <h3 class="text-lg font-semibold text-gray-800">${file.title}</h3>
          <p class="text-sm text-gray-600">Tags: ${file.tags.join(", ") || "None"}</p>
          <a href="${file.file}" target="_blank" class="text-blue-600 text-sm hover:underline mt-1 inline-block">Open document</a>
        `;

        const deleteBtn = document.createElement("button");
        deleteBtn.textContent = "Delete";
        deleteBtn.className =
          "bg-red-500 hover:bg-red-600 text-white px-3 py-1 rounded transition";
        deleteBtn.onclick = () => deleteFile(file.id);

        card.appendChild(left);
        card.appendChild(deleteBtn);
        container.appendChild(card);
      });
    } catch (err) {
      console.error("Error fetching files:", err);
      container.innerHTML =
        "<p class='text-red-500'>Failed to load your files.</p>";
    }
  }

  async function deleteFile(fileId) {
    const accessToken = localStorage.getItem("accessToken");
    if (!accessToken) {
      logout();
      return;
    }

    try {
      const res = await fetch(
        `https://django.narurm.eu/compunotesapi/file/${fileId}/`,
        {
          method: "DELETE",
          headers: {
            Authorization: `Bearer ${accessToken}`,
          },
        }
      );

      if (res.status === 401) {
        logout();
        return;
      }

      if (res.ok) {
        alert("File deleted successfully!");
        fetchMyFiles();
      } else {
        const data = await res.json();
        console.error("Failed to delete file:", data);
        alert("Failed to delete the file.");
      }
    } catch (err) {
      console.error("Error deleting file:", err);
      alert("An unexpected error occurred while deleting the file.");
    }
  }

  async function handleUpload() {
    const accessToken = localStorage.getItem("accessToken");
    if (!accessToken) {
      logout();
      return;
    }

    const formData = new FormData();
    const fileInput = document.getElementById("upload-file");
    const titleInput = document.getElementById("upload-title");
    const tagSelect = document.getElementById("tag-select");
    const selectedTags = Array.from(tagSelect.selectedOptions).map(
      (opt) => opt.value
    );

    if (!fileInput.files.length || !titleInput.value) {
      alert("Please provide both a file and a title.");
      return;
    }

    formData.append("file", fileInput.files[0]);
    formData.append("title", titleInput.value);
    formData.append("tags", selectedTags);
    formData.append("rating", 0);

    try {
      const response = await fetch(
        "https://django.narurm.eu/compunotesapi/file/",
        {
          method: "POST",
          headers: {
            Authorization: `Bearer ${accessToken}`,
          },
          body: formData,
        }
      );

      if (response.status === 401) {
        logout();
        return;
      }

      const data = await response.json();

      if (response.ok) {
        alert("Upload successful!");
        fetchMyFiles();
      } else {
        console.error("Upload failed:", data);
        alert(data.detail || "Upload failed.");
      }
    } catch (error) {
      console.error("Upload error:", error);
      alert("An unexpected error occurred.");
    }
  }

  fetchTags();
  fetchMyFiles();

  window.handleUpload = handleUpload;
  window.logout = logout;

  const cookies = document.cookie.split(";").reduce((acc, cookie) => {
    const [key, value] = cookie.trim().split("=");
    acc[key] = value;
    return acc;
  }, {});

  if (!cookies["accessToken"]) {
    window.location.href = "/login";
  }
</script>
